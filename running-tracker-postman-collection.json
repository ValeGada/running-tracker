{
  "info": {
    "name": "Running Tracker API",
    "description": "Colecci√≥n completa para probar la API de Running Tracker",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "runId",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.access_token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    pm.test('Registration successful', function () {",
                  "        pm.expect(response.access_token).to.not.be.empty;",
                  "        pm.expect(response.user.email).to.not.be.empty;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Juan P√©rez\",\n  \"email\": \"juan@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.access_token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    pm.test('Login successful', function () {",
                  "        pm.expect(response.access_token).to.not.be.empty;",
                  "        pm.expect(response.user.email).to.not.be.empty;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"juan@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "üë§ Users",
      "item": [
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/profile/me",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile", "me"]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üèÉ‚Äç‚ôÇÔ∏è Runs",
      "item": [
        {
          "name": "Create Run",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('runId', response.id);",
                  "    pm.test('Run created successfully', function () {",
                  "        pm.expect(response.id).to.not.be.empty;",
                  "        pm.expect(response.distance).to.be.a('number');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"startTime\": \"2024-01-15T10:00:00Z\",\n  \"endTime\": \"2024-01-15T10:30:00Z\",\n  \"distance\": 5.2,\n  \"duration\": 1800,\n  \"averagePace\": 5.5,\n  \"maxSpeed\": 12.5,\n  \"calories\": 350,\n  \"route\": [\n    {\n      \"latitude\": 40.7128,\n      \"longitude\": -74.0060,\n      \"timestamp\": 1642248000000,\n      \"altitude\": 10,\n      \"accuracy\": 5\n    },\n    {\n      \"latitude\": 40.7130,\n      \"longitude\": -74.0062,\n      \"timestamp\": 1642248060000,\n      \"altitude\": 12,\n      \"accuracy\": 4\n    }\n  ],\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/runs",
              "host": ["{{baseUrl}}"],
              "path": ["runs"]
            }
          }
        },
        {
          "name": "Get My Runs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/runs/my-runs",
              "host": ["{{baseUrl}}"],
              "path": ["runs", "my-runs"]
            }
          }
        },
        {
          "name": "Get Runs by User ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/runs/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["runs", "user", "{{userId}}"]
            }
          }
        },
        {
          "name": "Get Run by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/runs/{{runId}}",
              "host": ["{{baseUrl}}"],
              "path": ["runs", "{{runId}}"]
            }
          }
        },
        {
          "name": "Update Run",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"distance\": 6.0,\n  \"calories\": 400,\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/runs/{{runId}}",
              "host": ["{{baseUrl}}"],
              "path": ["runs", "{{runId}}"]
            }
          }
        },
        {
          "name": "Delete Run",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/runs/{{runId}}",
              "host": ["{{baseUrl}}"],
              "path": ["runs", "{{runId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üìä Statistics",
      "item": [
        {
          "name": "Get My Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/runs/stats/me",
              "host": ["{{baseUrl}}"],
              "path": ["runs", "stats", "me"]
            }
          }
        }
      ]
    },
    {
      "name": "üß™ Test Scenarios",
      "item": [
        {
          "name": "Complete User Journey",
          "item": [
            {
              "name": "1. Register New User",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    pm.collectionVariables.set('accessToken', response.access_token);",
                      "    pm.collectionVariables.set('userId', response.user.id);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Test Runner\",\n  \"email\": \"test{{$randomInt}}@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/register",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "register"]
                }
              }
            },
            {
              "name": "2. Create Multiple Runs",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    pm.collectionVariables.set('runId', response.id);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"startTime\": \"{{$isoTimestamp}}\",\n  \"endTime\": \"{{$isoTimestamp}}\",\n  \"distance\": {{$randomInt}},\n  \"duration\": {{$randomInt}},\n  \"averagePace\": 5.5,\n  \"maxSpeed\": 12.5,\n  \"calories\": {{$randomInt}},\n  \"route\": [\n    {\n      \"latitude\": {{$randomFloat}},\n      \"longitude\": {{$randomFloat}},\n      \"timestamp\": {{$timestamp}},\n      \"altitude\": 10,\n      \"accuracy\": 5\n    }\n  ],\n  \"status\": \"completed\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/runs",
                  "host": ["{{baseUrl}}"],
                  "path": ["runs"]
                }
              }
            },
            {
              "name": "3. Get Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/runs/stats/me",
                  "host": ["{{baseUrl}}"],
                  "path": ["runs", "stats", "me"]
                }
              }
            }
          ]
        }
      ]
    }
  ]
}