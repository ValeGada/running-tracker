‚öôÔ∏è Configura un proyecto de frontend mobile completo para Expo + React Native + TypeScript, listo para ejecutarse correctamente en Replit con plan gratuito.

El proyecto corresponde a una Running Tracker App, con estructura modular y buenas pr√°cticas de desarrollo.

üß± Requisitos funcionales (basados en Bolt.new)

Estructura base dentro de src/:

screens/      ‚Üí HomeScreen, RunSessionScreen, SummaryScreen, SettingsScreen
components/   ‚Üí botones, tarjetas, elementos reutilizables
navigation/   ‚Üí react-navigation (Stack + Bottom Tabs)
hooks/        ‚Üí useAuth, useLocationTracking
store/        ‚Üí store.ts + slices (authSlice, runSlice)
services/     ‚Üí api.ts, locationService.ts
theme/        ‚Üí esquema de colores, tipograf√≠a global (DM Sans), estilos
types/        ‚Üí interfaces y DTOs compartidos


Pantallas iniciales (pueden ser placeholders con dummy data):

HomeScreen: historial de carreras.

RunSessionScreen: bot√≥n iniciar/detener, mapa, distancia, tiempo, velocidad.

SummaryScreen: resumen carrera (distancia total, duraci√≥n, ritmo promedio).

SettingsScreen: configuraci√≥n de usuario b√°sica.

Autenticaci√≥n (estructura preparada):

AuthStack con OnboardingScreen, LoginScreen, RegisterScreen.

Hook useAuth() que devuelva { isLoggedIn, login, logout } (isLoggedIn boolean mock, false por defecto).

Navegaci√≥n principal: si isLoggedIn es false ‚Üí AuthStack, si true ‚Üí MainTabsNavigator.

Navegaci√≥n inferior: Tabs ‚Üí Home, Run, Summary, Settings.

UI y estilos:

UI Kitten + Eva Design System

Tipograf√≠a: DM Sans

Colores primarios: rosa #DC3760, fondo blanco, texto gris oscuro

Dependencias principales:

expo, react-native, typescript
@reduxjs/toolkit, react-redux
react-hook-form, zod
react-navigation (stack + bottom-tabs)
expo-location, expo-task-manager
react-native-maps
axios, dayjs
@ui-kitten/components, @eva-design/eva


C√≥digo limpio y modular, con comentarios breves en funciones principales.

‚öôÔ∏è Configuraci√≥n espec√≠fica para Replit

Archivos ra√≠z:

.replit

run = "npm run start"
language = "typescript"
hidden = ["node_modules", "build", ".expo"]


replit.nix

{ pkgs }: {
  deps = [
    pkgs.nodejs-18_x
    pkgs.watchman
  ];
}


package.json (scripts):

{
  "scripts": {
    "start": "expo start --tunnel",
    "android": "expo run:android",
    "ios": "expo run:ios",
    "web": "expo start --web",
    "lint": "eslint ."
  }
}


README.md: breve gu√≠a de ejecuci√≥n en Replit y local.

Optimizaci√≥n para plan gratuito:

Evitar procesos pesados en background

T√∫nel Expo para conexi√≥n externa

üèÅ Objetivo final

Proyecto base listo para exportar a GitHub o continuar desarrollo, con estructura modular completa, pantallas placeholders funcionales y navegaci√≥n configurada, y compatibilidad total con Replit gratuito.